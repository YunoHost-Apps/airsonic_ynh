#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

if [ ${PACKAGE_CHECK_EXEC:-0} -eq 1 ]; then
	sleep 60
fi

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

#REMOVEME? ynh_clean_setup () {
	true
}
# Exit if an error occurs during the execution of the script
#REMOVEME? ynh_abort_if_errors

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

#REMOVEME? domain=$YNH_APP_ARG_DOMAIN
#REMOVEME? path=$YNH_APP_ARG_PATH
#REMOVEME? is_public=$YNH_APP_ARG_IS_PUBLIC
#REMOVEME? admin=$YNH_APP_ARG_ADMIN

#REMOVEME? app=$YNH_APP_INSTANCE_NAME

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THESE ARGS
#=================================================
#REMOVEME? ynh_script_progression --message="Validating installation parameters..." --weight=1

#REMOVEME? install_dir=/var/www/$app
#REMOVEME? test ! -e "$install_dir" || ynh_die --message="This path already contains a folder"

# Register (book) web path
#REMOVEME? ynh_webpath_register --app=$app --domain=$domain --path=$path

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================
#REMOVEME? ynh_script_progression --message="Storing installation settings..." --weight=2

#REMOVEME? ynh_app_setting_set --app=$app --key=domain --value=$domain
#REMOVEME? ynh_app_setting_set --app=$app --key=path --value=$path
#REMOVEME? ynh_app_setting_set --app=$app --key=admin --value=$admin

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# FIND AND OPEN A PORT
#=================================================
#REMOVEME? ynh_script_progression --message="Finding an available port..." --weight=1

# Find an available port
#REMOVEME? port=$(ynh_find_port --port=8095)
#REMOVEME? ynh_app_setting_set --app=$app --key=port --value=$port

#=================================================
# INSTALL DEPENDENCIES
#=================================================
#REMOVEME? ynh_script_progression --message="Installing dependencies..." --weight=43

#REMOVEME? ynh_install_app_dependencies $pkg_dependencies

#=================================================
# CREATE DEDICATED USER
#=================================================
#REMOVEME? ynh_script_progression --message="Configuring system user..." --weight=3

# Create a system user
#REMOVEME? ynh_system_user_create --username=$app --home_dir="$install_dir"

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression --message="Setting up source files..." --weight=82

#REMOVEME? ynh_app_setting_set --app=$app --key=install_dir --value=$install_dir
# Download, check integrity, uncompress and patch the source from app.src
ynh_setup_source --dest_dir="$install_dir"

chmod 750 "$install_dir"
chmod -R o-rwx "$install_dir"
chown -R $app:www-data "$install_dir"

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring NGINX web server..." --weight=1

# Create a dedicated NGINX config
ynh_add_nginx_config

#=================================================
# SPECIFIC SETUP
#=================================================
# CREATE DATA DIRECTORY
#=================================================
ynh_script_progression --message="Creating a data directory..." --weight=1

#REMOVEME? data_dir=/home/yunohost.app/$app
#REMOVEME? ynh_app_setting_set --app=$app --key=data_dir --value=$data_dir

mkdir -p $data_dir/{Podcasts,Playlists}

chmod 764 "$data_dir"
chmod -R o-rwx "$data_dir"
chown -R $app:www-data "$data_dir"

#=================================================
# YUNOHOST MULTIMEDIA INTEGRATION
#=================================================
ynh_script_progression --message="Adding multimedia directories..." --weight=3

ynh_multimedia_build_main_dir
ynh_multimedia_addfolder --source_dir="/home/yunohost.app/$app/Podcasts" --dest_dir="share/Podcasts"
ynh_multimedia_addfolder --source_dir="/home/yunohost.app/$app/Playlists" --dest_dir="share/Playlists"

# Allow airsonic to write into these directories
ynh_multimedia_addaccess $app

#=================================================
# ENABLE "TRANSCODE"
#=================================================
ynh_script_progression --message="Enabling transcode..." --weight=1

### For details, see https://airsonic.github.io/docs/transcode/

mkdir -p $install_dir/transcode

if [ -x /usr/bin/ffmpeg ]; then   # Check if 'ffmpeg' is installed and executable
	ln -s /usr/bin/ffmpeg $install_dir/transcode
fi

# FIXME Not sure if 'lame' is needed ?
if [ -x /usr/bin/lame ]; then   # Check if 'lame' is installed and executable
	ln -s /usr/bin/lame $install_dir/transcode
fi

# Ensure links belong to the $app user
chown $app $install_dir/transcode

#=================================================
# ADD A CONFIGURATION
#=================================================
ynh_script_progression --message="Adding a configuration file..." --weight=1

ynh_add_config --template="../conf/systemd-sysconfig" --destination="/etc/default/$app"
chmod 600 "/etc/default/$app"
chown $app:$app "/etc/default/$app"

# Copy configuration file of airsonic
ynh_add_config --template="../conf/airsonic.properties" --destination="$install_dir/airsonic.properties"
chmod 600 "$install_dir/airsonic.properties"
chown $app:$app "$install_dir/airsonic.properties"

#=================================================
# SETUP SYSTEMD
#=================================================
ynh_script_progression --message="Configuring a systemd service..." --weight=3

# Create a dedicated systemd config
ynh_add_systemd_config

#=================================================
# SETUP APPLICATION WITH CURL
#=================================================
ynh_script_progression --message="Setuping application with CURL..." --weight=1

ynh_systemd_action --service_name=$app --action="start" --log_path="$install_dir/$app.log" --line_match="Started Application in"

# Set the app as temporarily public for curl call
ynh_script_progression --message="Configuring SSOwat..." --weight=1
# Making the app public for curl
#REMOVEME? ynh_permission_update --permission="main" --add="visitors"

# Reload Nginx
ynh_systemd_action --service_name=nginx --action="reload"

ynh_script_progression --message="Finalizing installation..." --weight=10

mailadmin=$(ynh_user_get_info --username=$admin --key=mail)

#http://www.subsonic.org/pages/api.jsp
passwordAdmin="admin"
salt=$(ynh_string_random --length=8)
token=$(echo -n $passwordAdmin$salt | md5sum | awk '{print $1}')

# Installation with curl
ynh_script_progression --message="Finalizing installation..." --weight=6

# This version number can be found here:
# https://airsonic.github.io/docs/api/
# To use the rest API, after the version 1.13.0, you have to use a "salted hash of the password"
# Doc here, part Authentication:
# http://www.subsonic.org/pages/api.jsp

VERSION="1.15.0"

# Change default admin password
new_password=$(ynh_string_random --length=8)
ynh_local_curl "/rest/changePassword.view" "u=admin" "t=$token" "s=$salt" "v=$VERSION" "c=myapp" "username=admin" "password=$new_password"

# Create admin user
passwordAdmin=$new_password
token=$(echo -n $passwordAdmin$salt | md5sum | awk '{print $1}')

ynh_local_curl "/rest/createUser.view" "u=admin" "t=$token" "s=$salt" "username=$admin" "password=a" "v=$VERSION" "c=myapp" "email=$mailadmin" "adminRole=Yes" "ldapAuthenticated=Yes" "settingsRole=Yes" "streamRole=Yes" "jukeboxRole=Yes" "downloadRole=Yes" "uploadRole=Yes" "playlistRole=Yes" "coverArtRole=Yes" "commentRole=Yes" "podcastRole=Yes" "shareRole=Yes" "videoConversionRole=Yes"

# Remove the public access
#REMOVEME? ynh_permission_update --permission="main" --remove="visitors"

#=================================================
# USE MULTIMEDIA
#=================================================
ynh_script_progression --message="Using multimedia..." --weight=1

ynh_systemd_action --service_name=$app --action="stop"

# Use multimedia folder
ynh_replace_string --match_string="INSERT INTO MUSIC_FOLDER VALUES(0,'/var/music','Music'" --replace_string="INSERT INTO MUSIC_FOLDER VALUES(0,'/home/yunohost.multimedia/share/Music','YunoHost Music'" --target_file="$install_dir/db/airsonic.script"

ynh_script_progression --message="Restarting a systemd service..." --weight=12

# Start a systemd service
ynh_systemd_action --service_name=$app --action="start" --log_path="$install_dir/airsonic.log" --line_match="Started Application in"

#=================================================
# GENERIC FINALIZATION
#=================================================
# SETUP LOGROTATE
#=================================================
ynh_script_progression --message="Configuring log rotation..." --weight=1

# Use logrotate to manage application logfile(s)
ynh_use_logrotate $install_dir/$app.log

#=================================================
# INTEGRATE SERVICE IN YUNOHOST
#=================================================
ynh_script_progression --message="Integrating service in YunoHost..." --weight=1

yunohost service add $app --description="Airsonic daemon" --log="$install_dir/$app.log"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..." --weight=12

# Start a systemd service
ynh_systemd_action --service_name=$app --action="restart" --log_path="$install_dir/$app.log" --line_match="Started Application in"

#=================================================
# SETUP SSOWAT
#=================================================
#REMOVEME? ynh_script_progression --message="Configuring permissions..." --weight=1

# Make app public if necessary
#REMOVEME? if [ $is_public -eq 1 ]
then
	# Everyone can access the app.
	# The "main" permission is automatically created before the install script.
#REMOVEME? 	ynh_permission_update --permission="main" --add="visitors"
fi

#=================================================
# RELOAD NGINX
#=================================================
#REMOVEME? ynh_script_progression --message="Reloading NGINX web server..." --weight=1

#REMOVEME? ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Installation of $app completed" --last
